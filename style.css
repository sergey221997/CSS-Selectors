body {
    padding: 0;
    margin: 0;
    box-sizing: border-box;

}

/*обращение по тегам*/

.text {
    display: flex;
    align-items: center;
}

/*h1 {
    color: red;
}

h2 {
    color: green;
}*/

h1,
h2 {
    color: green;
}

/*если использовать силекторы через запятую то h1 и h2 примут оба одинаковый цвет*/


/*обращение по классам*/

.text1 {
    display: flex;
}

.heading {
    color: aqua;
}

.subheading {
    color: yellow;
}

.heading,
.subheading {
    background-color: blue;
}

/*если использовать классы через запятую то heading и subheading 
примут оба одинаковый цвет*/


/*обращение по id */
/*он может быть только один на странице*/

#headingid {
    color: red;
}

/*два класса
*/

.link {
    color: red;
    text-decoration: none;
}

.link.active {
    font-weight: bold;
}

/*он говорит что если элемент содержит класс класс link и одновременно содержит класс active 
то примени следующиу стилистику*/

/*основные типы обращения*/


/*соседние селекторы*/

.button {
    font-size: 1.4rem;
    margin: 0;
    padding: 10px;
    background-color: brown;
    border: 1px solid grey;
}


.menu-button {
    display: flex;
}

.button+.button {
    margin-left: 20px;
}

/*мы относительно первого элемента обращаемся к соседнему элементу и указываем отступ с левап 20 соседний
элемент обращается также к соседнему элементу и устанавливает значение margin 20 px это работает
при если элементы находятся в плотную друг к другу*/


/*тот же патерн что и сверху только используем вместо плюса тильду*/

.box {
    display: flex;
    gap: 1rem;
}

.block1 {
    width: 50px;
    height: 50px;
    background-color: chartreuse;
}

div~.block1 {
    border-radius: 2rem;
}

/*она похожа на плюс но она работает чуть по другому она дает стилистику всем элементам 
относительно первого несмотря от какой отдаленности от нее находятся*/

/*наследственные и потомственные комбинаии*/

/*.box-button1 .button1 {
    font-size: 1.4rem;
    margin: 0;
    padding: 10px;
    background-color: brown;
    border: 1px solid grey;
}*/

/*мы говорим что толшько первого контейнера box-button1 
я хочу чтобы button1 выглядел следующим образом */

.box-button1>.button1 {
    font-size: 1.4rem;
    margin: 0;
    padding: 10px;
    background-color: brown;
    border: 1px solid grey;
}

/*стрелка указывает на то что button1 должен на прямую находится в данном контейнере*/

/*универсальный селектор*/

* {
    /*background-color: yellow;*/
}

/*обращение обсалютно ко всем элементам*/

/*в желтый вет покрасился фон а так же фон кнопок 
у некоторых кнопок фон не покрасился так как у них был принудмительно указан другой вет*/


/*так же можно ограничать */

/*.box * {
    /*background-color: yellow;*/
/*}*/

*/
/*несет нагрузку */


* {
    box-sizing: border-box;
}

/*таким образом мы указываеи браузеру как будет выщитываться ширина элементов*/


/*обращение по атрибутам */
/*используются крайне редко*/
a[class="link-external"] {
    color: red;
}

/*если наш класс заканчивается на internal 
то нужно чтобы к ним применилась эта стилистика*/

a[class$="internal"] {
    color: red;
}


/*если использовать каретку */
a[class^="link"] {
    color: red;
}

/*данный селектор говорит если у нас начинается класс с link чтобы стили применились*/



/*где есть совпадения*/

a[class*="rnal"] {
    color: red;
}

/*полезна если используются несколько классов*/
a[class~="link"] {
    color: red;
}

/*селектор вертикальная черта он находит элементы либо с полным совпадение или же до дефиса*/


/*псевдоклассы*/
.list {
    display: flex;
    list-style: none;
}

.link {
    padding: 10px;
    text-decoration: none;
    display: block;
}

/*.list .item:first-child {
    background-color: green;
}*/

/*принимает стили первый элемент конкретного списка*/

/*.list .item:last-child {
    background-color: rgb(243, 19, 187);
}*/

/*принимает стили последний элемент конкретного списка*/

/*не :first-child применяется ко всем кроме последнего*/

.list .item:not(:first-child) {
    margin-left: 2rem;
}

/*зебра для таблици*/

table {
    width: 100%;
}

tr:nth-child(odd) {
    background-color: red;
}

/*красными становятся не четные элементы*/

tr:nth-child(even) {
    background-color: red;
}

/*тогда красим все четные*/


tr:nth-child(2) {
    background-color: red;
}

/*указываем конкретные элементы*/

tr:nth-child(3n) {
    background-color: red;
}

/*фон применяется к каждому третьему элементу*/
/*начиная отсчет с самого начала*/

tr:nth-child(3n+1) {
    background-color: red;
}

/*применяет стилистику с первого элемента*/

tr:nth-child(2n+4) {
    background-color: red;
}

/*с четветого каждый второй элемент*/

div:empty {
    padding: 20px;
    background-color: green;
}

/*применяется к элементам которые пустые*/


/*в качестве взаимодействия*/

.linktest {
    background-color: pink;
    text-decoration: none;
    display: block;
    text-align: center;
    padding: 1rem;
}

.linktest:hover {
    background-color: azure;
}

/*эффект при наведении*/

.linktest:focus {
    background-color: black;
}

/*установка фокуса */

/*у инпутов*/
.checbox:checked {
    margin-top: 20px;
}